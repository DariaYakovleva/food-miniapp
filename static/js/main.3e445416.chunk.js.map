{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","useState","value","setValue","places","setPlaces","onSubmit","event","preventDefault","top","type","onChange","target","map","size","image","subtitle","header","text","Fragment","caption","maxHeight","src","width","height","style","border","allowFullScreen","loading","Persik","props","Panel","PanelHeader","left","PanelHeaderBack","onClick","data-to","className","persik","alt","App","activePanel","setActivePanel","setUser","ScreenSpinner","setPopout","useEffect","a","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","View","ReactDOM","render","getElementById"],"mappings":"inBAiEeA,EA3DF,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,GAA0B,KAAtBC,GAAsB,EAAlBC,YACGC,mBAAS,aADM,mBAClCC,EADkC,KAC3BC,EAD2B,OAEbF,mBAAS,CAAC,UAAW,cAAe,QAFvB,mBAElCG,EAFkC,KAE1BC,EAF0B,KAOzC,OACC,eAAC,IAAD,CAAOP,GAAIA,EAAX,UACA,cAAC,IAAD,sKACC,sBAAMQ,SAAU,SAACC,GAChBA,EAAMC,iBACNH,EAAU,GAAD,mBAAKD,GAAL,CAAaF,KACtBC,EAAS,KAHV,SAKA,cAAC,IAAD,CAAUM,IAAI,sJAAd,SACC,cAAC,IAAD,CAAOC,KAAK,OAAOR,MAAOA,EAAOS,SAChC,SAACJ,GACAJ,EAASI,EAAMK,OAAOV,cAKxBE,EAAOS,KAAI,SAASX,GACpB,OAAO,cAAC,IAAD,UAAaA,OAGrB,cAAC,IAAD,UACC,cAAC,IAAD,CAAUY,KAAK,IAAf,SACC,cAAC,IAAD,CACCC,MAAM,oGACNC,SAAS,sBACTC,OAAO,UACPC,KAAM,eAAC,IAAMC,SAAP,6PAEL,uBAFK,4HAIL,uBAJK,sJAML,uBANK,mEASNC,QAAQ,UACRC,UAAW,UAKd,wBACCC,IAAI,4MACJC,MAAM,MAAMC,OAAO,MAAMC,MAAO,CAAEC,OAAQ,GAAKC,gBAAgB,GAAGC,QAAQ,a,wBCxD/D,MAA0B,mCC0B1BC,G,OAhBA,SAAAC,GAAK,OACnB,eAACC,EAAA,EAAD,CAAOjC,GAAIgC,EAAMhC,GAAjB,UACC,cAACkC,EAAA,EAAD,CACCC,KAAM,cAACC,EAAA,EAAD,CAAiBC,QAASL,EAAM/B,GAAIqC,UAAQ,SADnD,oBAKA,qBAAKC,UAAU,SAASf,IAAKgB,EAAQC,IAAI,wBCyB5BC,EAjCH,WAAO,IAAD,EACqBvC,mBAAS,QAD9B,mBACVwC,EADU,KACGC,EADH,OAEczC,mBAAS,MAFvB,mBAEVD,EAFU,KAEG2C,EAFH,OAGW1C,mBAAS,cAAC2C,EAAA,EAAD,CAAe9B,KAAK,WAHxC,mBAGF+B,GAHE,WAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAU1C,EAAkB,EAAlBA,KAAM2C,EAAY,EAAZA,KACnC,GAAa,yBAAT3C,EAAiC,CACpC,IAAM4C,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBpD,MAAQmD,EAAKI,OAASJ,EAAKI,OAAS,eACpDF,SAASG,KAAKC,WAAWC,aAAaN,OALzB,mCAafO,KACE,IAEH,IAAM9D,EAAK,SAAA+D,GACVpB,EAAeoB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,eAACC,EAAA,EAAD,CAAMzB,YAAaA,EAAnB,UACC,cAAC,EAAD,CAAM3C,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,cAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,QC7B3BiD,IAAOC,KAAK,gBAEZkB,IAASC,OAAO,cAAC,EAAD,IAASb,SAASc,eAAe,W","file":"static/js/main.3e445416.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {FormItem, Input, SimpleCell, PanelHeader, Panel, Group, CardGrid, ContentCard} from '@vkontakte/vkui';\nimport Airtable from \"airtable\";\n\nconst Home = ({ id, go, fetchedUser }) => {\n\tconst [value, setValue] = useState('Green 28');\n\tconst [places, setPlaces] = useState(['Harvest', 'All Seasons', 'Duo']);\n\n\t// var airtable = new Airtable({endpointUrl: 'https://api-airtable-com-8hw7i1oz63iz.runscope.net/'})\n\n\n\treturn (\n\t\t<Panel id={id}>\n\t\t<PanelHeader>Гастрономический Петербург</PanelHeader>\n\t\t\t<form onSubmit={(event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tsetPlaces([...places, value]);\n\t\t\t\tsetValue('');\n\t\t\t}}>\n\t\t\t<FormItem top=\"Добавьте ваши любимые места\">\n\t\t\t\t<Input type=\"text\" value={value} onChange={\n\t\t\t\t\t(event) => {\n\t\t\t\t\t\tsetValue(event.target.value);\n\t\t\t\t\t}\n\t\t\t\t}/>\n\t\t\t</FormItem>\n\t\t\t</form>\n\t\t\t{places.map(function(value) {\n\t\t\t\treturn <SimpleCell>{value}</SimpleCell>;\n\t\t\t})}\n\n\t\t\t<Group>\n\t\t\t\t<CardGrid size=\"l\">\n\t\t\t\t\t<ContentCard\n\t\t\t\t\t\timage=\"https://images.restoclub.ru/uploads/place/f/1/9/c/f19ca9a3b2b6965dd3e4fd3e0cc7fae4_w1200_h630.jpg\"\n\t\t\t\t\t\tsubtitle=\"Топ1\"\n\t\t\t\t\t\theader=\"Harvest\"\n\t\t\t\t\t\ttext={<React.Fragment>\n\t\t\t\t\t\t\tПриятный утонченный интерьер в светлых тонах\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tГастрономический кайф\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tБокалы из тончайшего стекла\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tСредний чек\n\t\t\t\t\t\t</React.Fragment>}\n\t\t\t\t\t\tcaption=\"Harvest\"\n\t\t\t\t\t\tmaxHeight={300}\n\t\t\t\t\t/>\n\t\t\t\t</CardGrid>\n\t\t\t</Group>\n\n\t\t\t<iframe\n\t\t\t\tsrc=\"https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d31971.797161427457!2d30.292737114912995!3d59.94479679817081!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sru!2sge!4v1618068066231!5m2!1sru!2sge\"\n\t\t\t\twidth=\"600\" height=\"450\" style={{ border: 0 }} allowFullScreen=\"\" loading=\"lazy\"></iframe>\n\n\t\t</Panel>)\n};\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}